# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).stripc

platform :ios, '16.0'

prepare_react_native_project!

flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'athletespark' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'athletesparkTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |build_config|
        # Force C++17 and use libc++ across all pods
        build_config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        build_config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'

        # Workaround: disable use of char8_t in fmt to avoid Xcode 15 template errors
        if target.name == 'fmt'
          build_config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          unless build_config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'].include?('FMT_USE_CHAR8_T=0')
            build_config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FMT_USE_CHAR8_T=0'
          end

          build_config.build_settings['OTHER_CPLUSPLUSFLAGS'] ||= '$(inherited)'
          unless build_config.build_settings['OTHER_CPLUSPLUSFLAGS'].include?('-DFMT_USE_CHAR8_T=0')
            build_config.build_settings['OTHER_CPLUSPLUSFLAGS'] += ' -DFMT_USE_CHAR8_T=0'
          end
        end
      end
    end
  end
end
